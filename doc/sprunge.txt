*sprunge.txt*   Vim global plugin to paste to http://sprunge.us/

==============================================================================
CONTENTS                                                     *Sprunge-contents*

    1. Intro ........................... |SprungeIntroIntro|
    2. Usage ........................... |SprungeUsage|
    3. Configuration ................... |SprungeConfig|
    4. Bugs ............................ |SprungeBugs|
    5. Contributing .................... |SprungeContributing|
    6. Changelog ....................... |SprungeChangelog|
    7. Credits ......................... |SprungeCredits|

==============================================================================
INTRO                                                            *SprungeIntro*

Sprunge.us is a suckless pastebin service, unless others you're able to
upload|retrieve content without a web browser.

Quickstart
----------

Upload

  $ ls | curl -F 'sprunge=<-' http://sprunge.us

Retrieve

  $ curl <url-sprunge-generated>

Simple!

==============================================================================
USAGE                                                           *SprungeUsage*

    :Sprunge

After pressing <Enter>, you'll get a url with the content of your file. You
can also invoke this in visual mode to sprunge only the visual selection.

Alternatively you may also use the '<Leader>s' mapping, or any other by
setting 'g:sprunge_map' in your .vimrc

Wondering how to make sprunge.us to colorize your paste?, go to
|SprungeContributing|.

==============================================================================
CONFIGURATION                                                   *SprungeConfig*

These options should be set in your .vimrc file.

g:sprunge_cmd                                                *SprungeConfig-cmd*
    User defined sprunge command

    Use this option to customize the sprunge command. >
        let g:sprunge_cmd = 'curl -s -F "sprunge=<-" http://sprunge.us'
<

g:sprunge_providers                                    *SprungeConfig-providers*
    Default providers

    Use this option to customize the order in which the default providers are
    called. >
        let g:sprunge_providers = 'sprunge,ix'
<

g:sprunge_clipboard                                    *SprungeConfig-clipboard*
    Default clipboard

    Use this option to specify the target clipboard. Default to 'all'

    Acceptable Values: "none", "vim", "external", "all". >
        let g:sprunge_clipboard = 'all'
<
    none:     sprunge url will only be shown in the status line
    vim:      sprunge url will only be copied to the integrated vim clipboard
              (unnamed register, ")
    external: sprunge url will only be copied to external clipboard utilities
              (currently xclip, xsel, pbcopy)
    all:      sprunge url will be copied to all possible clipboards


g:sprunge_clipboard_cmd                            *SprungeConfig-clipboard-cmd*
    User defined clipboard

    Use this option to configure a third party clipboard application. >
        let g:sprunge_clipboard_cmd = 'clipboard_app --option'
<

g:sprunge_open_browser                             *SprungeConfig-open-browser*
    Browser trigger

    Use this option to open the sprunge link automatically in your default
    browser. Disabled by default. >
        let g:sprunge_open_browser = 0
<

g:sprunge_flush_left                                 *SprungeConfig-flush-left*
    Left align

    Use this option to align along the left margin before pasting. Disabled
    by default. >
        let g:sprunge_flush_left = 0
<

g:sprunge_map                                              *SprungeConfig-map*
    Default mapping

    Use this option to configure the default mapping >
        let g:sprunge_map = '<Leader>s'
<
    Alternatively the mapping can be assigned directly to the <Plug> action >
        map <Leader>s <Plug>Sprunge
<
    NOTE: The mapping is available in normal mode to sprunge the entire buffer
    and visual mode to sprunge only the visual selection.

==============================================================================
BUGS                                                              *SprungeBugs*

If you find a bug please post it on the issue tracker:

    https://github.com/chilicuil/vim-sprunge/issues

==============================================================================
CONTRIBUTING                                              *SprungeContributing*

I created this plugin while waiting for a meeting, it does what I need, if you
need something else the best way to get it is to send a patch, fork it and send
your pull request =)

GitHub: http://github.com/chilicuil/sprunge-vim/

==============================================================================
CHANGELOG                                                    *SprungeChangelog*

v0.0.6
    * Add the option to align to the left before pasting, enabled by
      g:sprunge_flush_left
    * Add the notion of multiple providers, enabled by g:sprunge_providers
    * Add new provider http://ix.io
v0.0.5
    * Add xsel to the default clipboard app list
    * Add g:sprunge_cmd
    * Add g:sprunge_clipboard_cmd
v0.0.4
    * Refactored the code & API
    * Added support to open link in browser, enabled by g:sprunge_open_browser
    * Added customizable mapping, configured by setting g:sprunge_map
v0.0.3
    * Add clipboard support
v0.0.2
    * Sprunge now uploads the current buffer instead of a file, most people
      will prefer this...
v0.0.1
    * Initial release.

==============================================================================
CREDITS                                                        *SprungeCredits*

The plugin was heavily inspired by gundo.vim:

    https://github.com/sjl/gundo.vim

Additional enhancements were made by the following people:

    * Dhruva,   https://github.com/dhruvasagar
    * Osse,     https://github.com/Osse
    * Greenify, https://github.com/greenify

==============================================================================
" vim: ft=help
